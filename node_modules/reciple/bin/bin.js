#!/usr/bin/env node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const RecipleConfig_1 = require("./reciple/classes/RecipleConfig");
const RecipleClient_1 = require("./reciple/classes/RecipleClient");
const fs_1 = require("fs");
const version_1 = require("./reciple/version");
const flags_1 = require("./reciple/flags");
const fallout_utility_1 = require("fallout-utility");
require("dotenv/config");
if (flags_1.flags.version) {
    console.log(`v${version_1.version}`);
    process.exit(0);
}
const allowedFiles = ['node_modules', 'reciple.yml', 'package.json', 'package.lock.json', 'modules.yml', '.rmmcache'];
if ((0, fs_1.readdirSync)('./').filter(f => !f.startsWith('.') && allowedFiles.indexOf(f)).length > 0 && !(0, fs_1.existsSync)('./reciple.yml')) {
    const ask = (_a = (0, fallout_utility_1.input)('This directory does not contain reciple.yml. Would you like to init axis here? [y/n] ')) !== null && _a !== void 0 ? _a : '';
    if (ask.toString().toLowerCase() !== 'y')
        process.exit(0);
}
const config = new RecipleConfig_1.RecipleConfig((_b = flags_1.flags.config) !== null && _b !== void 0 ? _b : './reciple.yml').parseConfig().getConfig();
const client = new RecipleClient_1.RecipleClient(Object.assign({ config: config }, config.client));
if (config.fileLogging.clientLogs)
    client.logger.info('Reciple Client v' + version_1.version + ' is starting...');
(() => __awaiter(void 0, void 0, void 0, function* () {
    yield client.startModules();
    client.on('ready', () => __awaiter(void 0, void 0, void 0, function* () {
        var _c;
        if (client.isClientLogsEnabled())
            client.logger.warn(`Logged in as ${((_c = client.user) === null || _c === void 0 ? void 0 : _c.tag) || 'Unknown'}!`);
        yield client.loadModules();
        client.addCommandListeners();
    }));
    client.login(config.token);
}))();
