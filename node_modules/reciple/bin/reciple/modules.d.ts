import { RecipleCommandBuilders } from './types/builders';
import { RecipleClient } from './classes/RecipleClient';
export declare type LoadedModules = {
    commands: RecipleCommandBuilders[];
    modules: RecipleModule[];
};
export declare class RecipleScript {
    versions: string | string[];
    commands?: RecipleCommandBuilders[];
    onLoad?(reciple: RecipleClient): void | Promise<void>;
    onStart(reciple: RecipleClient): boolean | Promise<boolean>;
}
export interface RecipleModule {
    script: RecipleScript;
    info: {
        filename?: string;
        versions: string[];
        path?: string;
    };
}
/**
 * Load modules from folder
 */
export declare function loadModules(client: RecipleClient, folder?: string): Promise<LoadedModules>;
