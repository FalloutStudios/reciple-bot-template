"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageCommandOptionManager = void 0;
class MessageCommandOptionManager extends Array {
    constructor(options) {
        super();
        this.push(...options);
    }
    get(name, required) {
        const option = this.find(o => o.name == name);
        if (!(option === null || option === void 0 ? void 0 : option.value) == undefined && required)
            throw new TypeError(`Can't find option named ${name}`);
        return option !== null && option !== void 0 ? option : null;
    }
    getValue(name, requied) {
        var _a;
        const option = this.get(name, requied);
        if (!(option === null || option === void 0 ? void 0 : option.value) && requied)
            throw new TypeError(`Value of option named ${name} is undefined`);
        return (_a = option === null || option === void 0 ? void 0 : option.value) !== null && _a !== void 0 ? _a : null;
    }
}
exports.MessageCommandOptionManager = MessageCommandOptionManager;
