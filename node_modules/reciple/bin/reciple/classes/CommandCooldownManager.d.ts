import { Guild, TextBasedChannel, User } from 'discord.js';
import { RecipleCommandBuilders } from '../types/builders';
export interface CooledDownUser {
    user: User;
    command: string;
    type: RecipleCommandBuilders["builder"];
    guild?: Guild | null;
    channel?: TextBasedChannel;
    expireTime: number;
}
export declare class CommandCooldownManager extends Array<CooledDownUser> {
    /**
     * Alias for `CommandCooldownManager#push()`
     */
    add(...options: CooledDownUser[]): number;
    /**
     * Remove cooldown from specific user, channel or guild
     */
    remove(options: Partial<CooledDownUser>, limit?: number): void;
    /**
     * Check if the given user is cooled-down
     */
    isCooledDown(options: Partial<Omit<CooledDownUser, 'expireTime'>>): boolean;
    /**
     * Clear non cooled-down users from this array
     */
    clean(options?: Partial<Omit<CooledDownUser, 'expireTime'>>): void;
    /**
     * Get someone's cooldown data
     */
    get(options: Partial<Omit<CooledDownUser, 'expireTime'>>): CooledDownUser | undefined;
    /**
     * Check if the options are valid
     */
    static checkOptions(options: Partial<Omit<CooledDownUser, 'expireTime'>>, data: CooledDownUser): boolean;
}
