"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.replaceAll = void 0;
const chalk_1 = __importDefault(require("chalk"));
/**
 * Find and replace characters in a string
 * @param str Original string
 * @param find Strings to find
 * @param replace Replacement strings
 */
function replaceAll(str, find, replace) {
    if (typeof find === 'string')
        find = [find];
    if (typeof replace === 'string')
        replace = [replace];
    if (find.length !== replace.length)
        throw new TypeError(`${chalk_1.default.yellow('find')} and ${chalk_1.default.yellow('replace')} parameters must be of the same length`);
    for (let i = 0; i < find.length; i++) {
        str = str.replace(new RegExp(find[i], 'g'), replace[i]);
    }
    return str;
}
exports.replaceAll = replaceAll;
